/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.1                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      fvModels;
}

reactionSourceCOIW
{
    // type            scalarCodedSource;	//scalarSemiImplicitSource
    type            coded;	//scalarSemiImplicitSource
    active          yes;
    name	        reactionSourceCOIW;
    selectionMode   all;

    field 		        CO;

    codeInclude
    #{
        #include "fvCFD.H"
    #};

    // codeAddSup
    codeAddRhoSup
    #{        
        #include "../../constant/rnTerms/loadCommonData.H"          //load data common to all the reactions
        
        word currSpName("CO");

        // Info << "tu" <<endl;
        
        #include "../../constant/rnTerms/r_powerLawV3.H"                  //load reaction source
    #};
}

reactionSourceO2IW
{
    // type            scalarCodedSource;	//scalarSemiImplicitSource
    type            coded;	//scalarSemiImplicitSource
    active          yes;
    name	        reactionSourceO2IW;
    selectionMode   all;
    // selectionMode   cellZone;
    // cellZone        inWallPorosity;
    
    // in reactions
    // C0 + 0.5O2 -> CO2        (reaction01)
    // N2O -> N2 + 0.5O2        (reaction04)

    // scalarCodedSourceCoeffs
    // {
        // selectionMode       all;
        // selectionMode   cellZone;
        // cellZone        inWallPorosity;

    	field 		        O2;

    	// fieldNames	        (O2);
    	// redirectType		sourceTime;

        codeInclude
        #{
            #include "fvCFD.H"
        #};

        codeCorrect
        #{
            //~ Pout<< "**codeCorrect**" << endl;
        #};

        codeAddRhoSup
        #{            
            #include "../../constant/rnTerms/loadCommonData.H"          //load data common to all the reactions
            
            // scalar  coatingVolFrac(                                     //read volumetric fraction of coating
            //     readScalar(
            //         transportProperties.subDict("inWallProperties").lookup("coatingVolFrac")
            //     )
            // );
            
            // const volScalarField& isCoat = mesh_.lookupObject<volScalarField>("isInWallCoat");
            
            word currSpName("O2");
            
            #include "../../constant/rnTerms/r_powerLawV3.H"                  //load reaction source
        #};

        codeSetValue
        #{
            //Pout<< "**codeSetValue**" << endl;
        #};

        // // Dummy entry. Make dependent on above to trigger recompilation
        code
        #{
            $codeInclude
            $codeCorrect
            $codeAddSup
            $codeSetValue
        #};
    // }

    // reactionSourceO2IWCoeffs
    // {
    //    selectionMode   all;
    // //    selectionMode   cellZone;
    //     // cellZone        coating;
    // }
}

reactionSourceCO2IW
{
    // type            scalarCodedSource;	//scalarSemiImplicitSource
    type            coded;	//scalarSemiImplicitSource
    active          yes;
    name	        reactionSourceCO2IW;
    selectionMode   all;
    // selectionMode   cellZone;
    // cellZone        inWallPorosity;
    
    // in reactions
    // C0 + 0.5O2 -> CO2        (reaction01)
    // N2O -> N2 + 0.5O2        (reaction04)

    // scalarCodedSourceCoeffs
    // {
    //     selectionMode       all;
        // selectionMode   cellZone;
        // cellZone        inWallPorosity;

    	field 		        "CO2";

    	// fieldNames	        "CO2";
    	// redirectType		sourceTime;

        codeInclude
        #{
            #include "fvCFD.H"
        #};

        codeCorrect
        #{
            //~ Pout<< "**codeCorrect**" << endl;
        #};

        codeAddRhoSup
        #{            
            #include "../../constant/rnTerms/loadCommonData.H"          //load data common to all the reactions
            
            // scalar  coatingVolFrac(                                     //read volumetric fraction of coating
            //     readScalar(
            //         transportProperties.subDict("inWallProperties").lookup("coatingVolFrac")
            //     )
            // );
            
            // const volScalarField& isCoat = mesh_.lookupObject<volScalarField>("isInWallCoat");
            
            word currSpName("CO2");
            
            #include "../../constant/rnTerms/r_powerLawV3.H"                  //load reaction source
        #};

        codeSetValue
        #{
            //Pout<< "**codeSetValue**" << endl;
        #};

        // // Dummy entry. Make dependent on above to trigger recompilation
        code
        #{
            $codeInclude
            $codeCorrect
            $codeAddSup
            $codeSetValue
        #};
    // }

    // reactionSourceCO2IWCoeffs
    // {
    //    selectionMode   all;
    // //    selectionMode   cellZone;
    //     // cellZone        coating;
    // }
}
enthalpySourceINWALL
{
    // type            scalarCodedSource;	//scalarSemiImplicitSource
    type            coded;	//scalarSemiImplicitSource
    active          yes;
    name	        enthalpySourceINWALL;
    selectionMode   all;
    // selectionMode   cellZone;
    // cellZone        inWallPorosity;
    
    // scalarCodedSourceCoeffs
    // {
        // selectionMode       all;
        // selectionMode   cellZone;
        // cellZone        inWallPorosity;

    	field 		        "T";

    	// fieldNames	        (T);
    	// redirectType		sourceTime;

        codeInclude
        #{
            #include "fvCFD.H"
            // #include "../../constant/rnTerms/rCp.H"
        #};

        codeCorrect
        #{
            //~ Pout<< "**codeCorrect**" << endl;
        #};

        codeAddRhoSup
        #{            
            #include "../../constant/rnTerms/loadCommonData.H"          //load data common to all the reactions
            
            // scalar  coatingVolFrac(                                     //read volumetric fraction of coating
            //     readScalar(
            //         transportProperties.subDict("inWallProperties").lookup("coatingVolFrac")
            //     )
            // );
            
            // const volScalarField& isCoat = mesh_.lookupObject<volScalarField>("isInWallCoat");
                        
            #include "../../constant/rnTerms/compEnthV2.H"                  //load reaction enthalpy source
        #};
                    
        codeSetValue
        #{
            //Pout<< "**codeSetValue**" << endl;
        #};

        // Dummy entry. Make dependent on above to trigger recompilation
        code
        #{
            $codeInclude
            $codeCorrect
            $codeAddSup
            $codeSetValue
        #};
    // }

    // enthalpySourceINWALLCoeffs
    // {
    //     selectionMode   all;
    //     // selectionMode   cellZone;
    //     // cellZone        inWallPorosity;
    // }
}