/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      sampleDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
type surfaces;
libs ("libsampling.so");

// Set output format : choice of
//      xmgr
//      jplot
//      gnuplot
//      raw
//      vtk
//      csv
//setFormat raw;

surfaceFormat vtk;

// optionally define extra controls for the output formats
formatOptions
{
    ensight
    {
        format  ascii;
    }
}
interpolationScheme cell;

fields
(
    CO
    p
);

surfaces
(
    s1Plane 
    {
        type            plane;    // always triangulated
        planeType pointAndNormal;
	    pointAndNormalDict
        {
			point	(0.002185 0.002185 0.0451);
            normal      (0 0 1);
	    }
        zone       s1CZS;
    }
    ch1Plane 
    {
        type            plane;    // always triangulated
        planeType pointAndNormal;
	    pointAndNormalDict
        {
			point	(0.002185 0.002185 0.0451);
            normal      (0 0 1);
	    }
        zone       ch1CZS;
    }
    s2Plane 
    {
        type            plane;    // always triangulated
        planeType pointAndNormal;
	    pointAndNormalDict
        {
			point	(0.002185 0.002185 0.0451);
            normal      (0 0 1);
	    }
        zone       s2CZS;
    }
    s3Plane 
    {
        type            plane;    // always triangulated
        planeType pointAndNormal;
	    pointAndNormalDict
        {
			point	(0.002185 0.002185 0.0451);
            normal      (0 0 1);
	    }
        zone       s3CZS;
    }
    s4Plane 
    {
        type            plane;    // always triangulated
        planeType pointAndNormal;
	    pointAndNormalDict
        {
			point	(0.002185 0.002185 0.0451);
            normal      (0 0 1);
	    }
        zone       s4CZS;
    }
);

